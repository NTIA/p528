// Check if we're running in Node.js (might be running in a browser)
const IS_NODE = (typeof process === 'object' && typeof require === 'function');

// We're in the test runner (we'll load these in the 'before' function)
if (IS_NODE) {
    let chai = null;
    let Module = null;
}
else { // We're in the browser...
    // Using 'var' because it needs to be global in order for Emscripten's generated JavaScript code to see it
    var Module = {
        // Run the tests when Emscripten's JS tells us that it's ready to be interacted with
        onRuntimeInitialized: () => { mocha.run(); }
    };
}

describe("Testing the model P.528", () => {

    before(() => {
        if (IS_NODE) {
            // Load the Chai library
            chai = require('chai');

            // Load the Emscripten generated JavaScript. Because it might not be ready right away, return a Promise that will be
            // resolved once the module is ready to be interacted with
            return new Promise((resolve) => {
                Module = require('../../wasm/dist/p528json');
                Module['onRuntimeInitialized'] = () => {
                    resolve();
                }
            }); // new Promise
        } // IS_NODE
    }); // before

    it("Calculate Profile", async () => {

        const request = {
            h_1__user_units: 5,
            h_2__user_units: 10000,
            time: 50,
            Polarization: 0,
            f__mhz: 5000
        }

        const requestStr = JSON.stringify(request);

        const outputJson = Module.ccall('calcP528', 'string', ['string'], [requestStr]);

        const expectedJson = "{\"A__db\":[126.46085394936013,137.9730326075046,143.93647084713783,147.5646207791242,150.1944721139775,152.26156314963558,153.83511090402635,155.83895091315424,158.38291652622812,160.78609006450213,163.0815203486053,165.26208044071993,191.36726195521553,204.135854047847,210.66423621088353,215.69776815026864,220.27966223668528,224.59845131611306,228.65407877404164,232.5157638145544,236.28197179677775,239.99756725388306,243.6489673695473,247.19083876739523,250.56793763757577,253.73229312001556,256.6834809487919,259.52909194972034,262.4193457506717,265.3355029633902,268.19292392138044,270.985791172839,273.7265543789593,276.4275854140823,279.1006552903694,281.75640887133727,284.4042907362295,287.0515321859058,289.7059346305224,292.3745713338659,295.0633534171327,297.7772217399744,300.5202663004653,303.29597199221485,306.1071803847135,308.9562407256452,311.8450456647796,314.7752078804496,317.7479938163498,320.76439521853604,323.82517691745284],\"A_a__db\":0,\"A_fs__db\":[126.425056055803,137.8261051691244,143.64779916691106,147.13213137816376,149.61776008711752,151.54984780567406,153.13004036885883,154.4669267071451,155.6253979305279,156.64746967077463,157.56187253649026,158.3891354338197,159.13321082259182,159.82786385579917,160.47137602404416,161.0699842889208,161.6291567960019,162.15375035721996,162.64751709891698,163.11390410314414,163.55576213633907,163.9754941854215,164.37537047056844,164.75719043841076,165.12273008527694,165.4733430500629,165.8104357016016,166.13511943130328,166.4484114937435,166.7512435111065,167.04435177821983,167.32850311607018,167.60432082117433,167.87233017359335,168.13304881938046,168.38688545925214,168.63426761062544,168.87563903422046,169.11123365132346,169.34129415639723,169.5660332409185,169.7856563968864,170.00033677330435,170.2102807729883,170.41566239330376,170.61664418856634,170.81335620282948,171.00595935690455,171.19458492813163,171.37935681211167,171.5603915860845],\"ModeOfPropagation\":[1,1,1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],\"d__km\":[],\"theta_h1__rad\":0,\"warnings\":0}";

        chai.expect(expectedJson).to.equal(outputJson);
    });
});
